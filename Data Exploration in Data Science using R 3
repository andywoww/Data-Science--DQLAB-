------------- Data Duplikasi
================ Menentukan Jarak Teks
stringdist("Agus Cahyono", "Cahyono, Agus", method="cosine")

================ Mencari Duplikat pada Vector
#Load library stringdist
library("stringdist")

#Membuat variable referensi dan vector nama
referensi <- "Agus Cahyono"
nama.pelanggan <- c("Agus Cahyono", "Justin Bieber", "Agus Tjahyono", "Cahyono Agus")

#Menghitung jarak referensi dengan vector nama
jarak.teks <- stringdist(referensi, nama.pelanggan, method="cosine")

#Menampilkan variable jarak.teks
jarak.teks

#Data nama pelanggan yang telah difilter dengan threshold 0.15
nama.pelanggan[jarak.teks<=0.15]

============== Menambahkan Informasi Grouping Duplikat
#Load library stringdist
library("stringdist")

#Membuat variable vector nama
nama.pelanggan <- c("Agus Cahyono", "Justin Bieber", "Agus Tjahyono", "Cahyono Agus")

#Inisialisai variable untuk hasil.akhir
hasil.akhir <- NULL

#Inisialiasi variable grouping_no dengan nilai 1
grouping_no <- 1

#Melakukan perulangan proses pencarian dengan perintah while, sampai akhirnya isi vector menjadi kosong (panjang = 0)
while(length(nama.pelanggan)>0)
{
  #Variable referensi diisi dengan item pertama variable nama.pelanggan
  referensi <- nama.pelanggan[1]

  #Menghitung jarak antara referensi dengan item-item nama.pelanggan
  jarak.teks <- stringdist(referensi, nama.pelanggan, method="cosine")

  #Hasil filter jarak dengan threshold 0.15 disimpan ke variable nama.hasil
  nama.hasil <- nama.pelanggan[jarak.teks <= 0.15]

  #Hasil filter jarak dengan threshold 0.15 disimpan ke variable nama.hasil
  var.temp = data.frame(grouping=grouping_no, nama=nama.hasil)

  #Menggabungkan hasil sebelumnya 
  hasil.akhir <- rbind(hasil.akhir, var.temp)  

  #Mengambil porsi data yang bukan di dalam threshold dengan menggunakan simbol ! yang mewakili operator not (bukan)
  nama.pelanggan <- nama.pelanggan[!(jarak.teks <= 0.15)]

  #Menambahkan nilai grouping untuk diambil pada iterasi selanjutnya
  grouping_no <- grouping_no + 1
}
#Menampilkan hasil akhir
hasil.akhir

--------------------- Melakukan Grouping Duplikat dari Dataset Awal
library(RMySQL)
library(stringdist)
library(openxlsx)

#Membuka koneksi
con <- dbConnect(MySQL(), user="demo", password="demo", host="mysqlhost",
                 dbname="dqlabdatawrangling")

#Mengambil kolom kode_pelanggan, nama dan alamat dari dqlab_messy_data
sql <- "select kode_pelanggan, nama, alamat from dqlab_messy_data"

rs <- tryCatch(dbSendQuery(con, sql), finally = print("query ok"))
data.pelanggan <- fetch(rs, n=-1)
dbClearResult(rs)

#Inisialisai variable untuk hasil.akhir
hasil.akhir <- NULL

#Inisialiasi variable grouping_no dengan nilai 1
grouping_no <- 1

while(length(data.pelanggan$nama)>0)
{
  #Variable referensi nama dan alamat diambil dari item pertama
  referensi.nama <- data.pelanggan$nama[1]
  referensi.alamat <- data.pelanggan$alamat[1]
  
  #Menghitung jarak antara referensi dengan item-item nama dan alamat
  #gunakan method "cosine" untuk nama, dan method "lv" untuk alamat
  jarak.teks.nama <- stringdist(referensi.nama, data.pelanggan$nama, method="cosine")
  jarak.teks.alamat <- stringdist(referensi.alamat, data.pelanggan$alamat, method="lv")

  #Hasil filter jarak dengan threshold 
  # - lebih kecil sama dengan angka 0.15 untuk nama
  # - lebih kecil dari angka 15 untuk alamat
  #disimpan ke variable filter.jarak
  filter.jarak <- (jarak.teks.nama <= 0.15 & jarak.teks.alamat < 15)

  #Melakukan filtering pada variable data.pelanggan, dan mengambil tiga kolom 
  #untuk disimpan ke tiga variable 
  kode_pelanggan.temp <- data.pelanggan[filter.jarak,]$kode_pelanggan
  nama.temp <- data.pelanggan[filter.jarak,]$nama
  alamat.temp <- data.pelanggan[filter.jarak,]$alamat
  
  #Konstruksi temporary variable
  var.temp <- data.frame(grouping=grouping_no, kode_pelanggan=kode_pelanggan.temp, nama=nama.temp, alamat=alamat.temp, jumlah_record=length(kode_pelanggan.temp))

  #Menggabungkan temporary variable dengan hasil sebelumnya
  hasil.akhir <- rbind(hasil.akhir, var.temp)
  
  #Menggabungkan hasil sebelumnya
  data.pelanggan <- data.pelanggan[!filter.jarak,]

  #Menambahkan nilai grouping untuk diambil pada iterasi selanjutnya
  grouping_no <- grouping_no + 1
}

#Menulis hasil ke file staging.duplikat.awal.xlsx
write.xlsx(hasil.akhir, file="staging.duplikat.awal.xlsx")

#Menutup seluruh koneksi MySQL
all_cons <- dbListConnections(MySQL())
for(con in all_cons)
    + dbDisconnect(con)

------------------------------ Melakukan Grouping Duplikat dari Dataset Hasil Standarisasi


----------------------------- Mengganti missing value dengan nilai mean
library(RMySQL)
library(openxlsx)

con <- dbConnect(MySQL(), user="demo", password="demo", host="mysqlhost",
                 dbname="dqlabdatawrangling")

sql <- "SELECT kode_pelanggan, nilai_belanja_setahun from dqlab_messy_data"

rs <- tryCatch(dbSendQuery(con, sql), finally = print("query ok"))
data.pelanggan <- fetch(rs, n=-1)
dbClearResult(rs)

#Melakukan konversi nilai_belanja_setahun menjadi numerik
#karena sebelumnya disimpan dalam bentuk character
data.pelanggan$nilai_belanja_setahun <- as.numeric(data.pelanggan$nilai_belanja_setahun)
summary(data.pelanggan)

#Menghitung rata-rata dengan function mean dan disimpan dalam variable nilai_rata_rata
nilai_rata_rata <- mean(data.pelanggan$nilai_belanja_setahun, na.rm=TRUE)

#Mengisi missing value dengan nilai rata-rata
data.pelanggan$nilai_belanja_setahun[is.na(data.pelanggan$nilai_belanja_setahun)] <- nilai_rata_rata

#Melihat summary setelah missing value
summary(data.pelanggan)

#Menulis ke dalam file staging.enrichment.mean.xlsx
write.xlsx(data.pelanggan, file="staging.enrichment.mean.xlsx")
all_cons <- dbListConnections(MySQL())
for(con in all_cons)
    + dbDisconnect(con)

----------------------- melakukan enrichment Kode Pos
library(stringdist)
library(openxlsx)

#Membaca file staging.final.xlsx
data.pelanggan <- read.xlsx("staging.final.xlsx")

str(data.pelanggan)

#------------------- 1. PERSIAPAN: MENEMUKAN DUPLIKASI ALAMAT -----------------------
#Konversi Factor
data.pelanggan$kode_pos <- as.factor(data.pelanggan$kode_pos)

#Inisialiasi variable grouping_no dengan nilai 1
grouping_no <- 1

#Inisialisasi hasil.akhir
hasil.akhir <- NULL

while(length(data.pelanggan$alamat)>0)
{
  #Variable referensi alamat diambil dari item pertama
  referensi.alamat <- data.pelanggan$alamat[1]
  
  #Menghitung jarak antara referensi dengan item alamat dengan method "lv" 
  jarak.teks.alamat <- stringdist(referensi.alamat, data.pelanggan$alamat, method="lv")

  #Hasil filter jarak dengan threshold 
  # - lebih kecil dari angka 10 untuk alamat
  #disimpan ke variable filter.jarak
  filter.jarak <- (jarak.teks.alamat < 10)

  #Melakukan filtering pada variable data.pelanggan, dan mengambil dua kolom 
  #untuk disimpan ke dua variable 
  kode_pelanggan.temp <- data.pelanggan[filter.jarak,]$kode_pelanggan
  alamat.temp <- data.pelanggan[filter.jarak,]$alamat
  kode_pos.temp <- data.pelanggan[filter.jarak,]$kode_pos
  
  #Konstruksi temporary variable
  var.temp <- data.frame(grouping=grouping_no, kode_pelanggan=kode_pelanggan.temp, kode_pos=kode_pos.temp, alamat=alamat.temp, jumlah_record=length(kode_pelanggan.temp))

  #Menggabungkan temporary variable dengan hasil sebelumnya
  hasil.akhir <- rbind(hasil.akhir, var.temp)
  
  #Membuang porsi yang sudah ditemukan
  data.pelanggan <- data.pelanggan[!filter.jarak,]

  #Menambahkan nilai grouping untuk diambil pada iterasi selanjutnya
  grouping_no <- grouping_no + 1
}
hasil.akhir
summary(hasil.akhir$kode_pos)
#----------------- 2. MENGISI KODE POS YANG KOSONG --------------------
#Inisialisasi kolom baru kode pos
hasil.akhir$kode_pos_enrich <-hasil.akhir$kode_pos 

#Mengambil nomor grouping kode pos yang kosong
kode_pos_kosong <- hasil.akhir[hasil.akhir$kode_pos == "-",]

while(length(kode_pos_kosong$kode_pos)>0)
{
	grouping_no <- kode_pos_kosong$grouping[1]
	#Membuat variable filter 
	filter.data <- hasil.akhir$grouping == grouping_no & hasil.akhir$kode_pos != "-" 
	#Mengambil data pertama dari hasil filter dengan function head
	temp.data <- head(hasil.akhir[filter.data,],1)
  	#Mengisi kolom kode_pos_enrich dengan kolom kode_pos yang ditemukan
hasil.akhir[hasil.akhir$grouping == grouping_no,]$kode_pos_enrich <- temp.data$kode_pos
  
    #Menghapus row pertama dari variable kode_pos_kosong
    kode_pos_kosong <- kode_pos_kosong[-1,]
}
hasil.akhir
summary(hasil.akhir$kode_pos_enrich)

#Menulis hasil ke file staging.enrichment.kode_pos.xlsx
write.xlsx(hasil.akhir, file="staging.enrichment.kode_pos.xlsx")


---------------------- Konsolidasi data kahir
library(openxlsx)

#Membaca file staging.enrichment.mean.xlsx dan menyimpannnya dalam variable staging.enrichment.mean
staging.enrichment.mean <- read.xlsx("staging.enrichment.mean.xlsx")

#Membaca file staging.enrichment.kode_pos.xlsx dan menyimpannnya dalam variable staging.enrichment.kode_pos
staging.enrichment.kode_pos <- read.xlsx("staging.enrichment.kode_pos.xlsx")

#Membaca file staging.final.xlsx dan menyimpannnya dalam variable staging.final
staging.final <- read.xlsx("staging.final.xlsx")

staging.enrichment.mean

#Membaca file staging.enrichment.kode_pos.xlsx dan menyimpannnya dalam variable staging.enrichment.kode_pos
staging.enrichment.kode_pos <- read.xlsx("staging.enrichment.kode_pos.xlsx")
#Ambil field, kode_pelanggan, dan kode_pos_enrich saja
staging.enrichment.kode_pos <- staging.enrichment.kode_pos[,c("kode_pelanggan", "kode_pos_enrich", "grouping")]
staging.enrichment.kode_pos

#Membaca file staging.final.xlsx dan menyimpannnya dalam variable staging.final
staging.final <- read.xlsx("staging.final.xlsx")

#Menggabungkan variable staging.enrichment.mean dengan staging.enrichment.kode_pos melalui kolom kode_pelanggan
hasil.final <- merge(x=staging.enrichment.mean, y=staging.enrichment.kode_pos, by.x = "kode_pelanggan", by.y = "kode_pelanggan", all = TRUE)

#Menggabungkan variable staging.final dengan hasil.final melalui kolom kode_pelanggan
hasil.final <- merge(x=staging.final, y=hasil.final, by.x = "kode_pelanggan", by.y = "kode_pelanggan", all = TRUE)
hasil.final

#Menulis hasil ke file staging.final.xlsx
write.xlsx(hasil.final, file="hasil.final.xlsx") 

